{"version":3,"file":"static_symbol.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/aot/static_symbol.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH,+BAA+B,KAAU;IACvC,MAAM,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;AAC3F,CAAC;AAED;;;;GAIG;AACH;IACE,sBAAmB,QAAgB,EAAS,IAAY,EAAS,OAAkB;QAAhE,aAAQ,GAAR,QAAQ,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,YAAO,GAAP,OAAO,CAAW;IAAG,CAAC;IACzF,mBAAC;AAAD,CAAC,AAFD,IAEC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport function isStaticSymbol(value: any): value is StaticSymbol {\n  return typeof value === 'object' && value !== null && value['name'] && value['filePath'];\n}\n\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nexport class StaticSymbol {\n  constructor(public filePath: string, public name: string, public members?: string[]) {}\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}